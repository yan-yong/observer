#!/usr/bin/python
import sys, os, subprocess, time, platform, ConfigParser, fcntl, thread, getopt
from observer_common import *

def observer_start():
    '''
    socket.setdefaulttimeout(10)
    cfg_manager = ConfigManager()
    opts, args = getopt.getopt(sys.argv[1:], "h:p:")
    dst_ip   = '127.0.0.1'
    dst_port = cfg_manager.listen_port 
    for op, value in opts:
        if op == '-h':
            dst_ip = value
        elif op == '-p':
            dst_port = int(value)
    cmd_str  = get_observer_cmd(args)
    if cmd_str is None:
        sys.exit(1)
    client_socket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    client_socket.connect((dst_ip, dst_port))
    '''
    client_socket, cmd_str = obtain_client_socket_cmd_name() 
    ret, msg = client_start_cmd(client_socket, cmd_str)
    if not ret:
        log_error('%s' % msg)
        client_socket.close()
        sys.exit(1)
    else:
        log_info('start success.')
    time.sleep(1)
    ret, msg = client_cmd_status(client_socket, None, cmd_str)
    if not ret or msg == 'stopped':
        log_info('notice: the process is stopped.')
    else:
        log_info('the programme is running.')
    client_socket.close()

if __name__ == '__main__':
    observer_start()
